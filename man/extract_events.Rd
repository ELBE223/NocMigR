% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_events.R
\name{extract_events}
\alias{extract_events}
\title{Extract detected events and writes them to a sound file}
\usage{
extract_events(
  threshold_detection,
  buffer = 1,
  format = c("WAV", "wav", "mp3", "MP3"),
  path,
  downsample = NULL,
  mono = TRUE,
  rescale = NULL,
  LPF = NULL,
  HPF = NULL
)
}
\arguments{
\item{threshold_detection}{either class threshold_detection or path to audacity marks}

\item{buffer}{Buffer in seconds added to before and after the event (default 1). Controls also the detection of overlapping events.}

\item{format}{Format of sound files (default and suggested is to use WAV).}

\item{path}{where to look up the sound file}

\item{downsample}{Null or re-sampling factor used in \code{\link{split_wave}} (default NULL).}

\item{mono}{Logical. By default, \code{\link{split_wave}} coerces stereo files to mono prior to event detection (default TRUE). If kept as stereo file the left channel will used in \code{\link{find_events}}.}

\item{rescale}{optional. allows to resacale the wav to a new bit rate (e.g., "8", "16", "24").}

\item{LPF}{integer. Low-Pass Filter (Hz). Frequencies above the cutoff are greatly attenuated.
Default is set internally at the Nyquist frequency of the recording.}

\item{HPF}{integer. High-Pass Filter (Hz). Frequencies below the cutoff are greatly attenuated.
Default setting is 16000 Hz. A default of 1000 Hz is recommended for most bird vocalizations.}
}
\value{
data frame
}
\description{
Uses audacity marks, either obtained from text file created with seewave::write.audacity or an object of class \code{threshold_detection} to extract audio events from the original sound file. Optional arguments allow to resample and coerce stereo to mono before writing wav to file.
}
